/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually
 * edited  */
/* The following lines can be configured to regenerate this file during cmake */
/* If manual edits are made, the following tags should be modified accordingly.
 */
/* BINDTOOL_GEN_AUTOMATIC(0) */
/* BINDTOOL_USE_PYGCCXML(0) */
/* BINDTOOL_HEADER_FILE(synchronize.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(a358dce518e1e7a6365fbe78d5a658e1) */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <difi/synchronize.h>
// pydoc.h is automatically generated in the build directory
#include <synchronize_pydoc.h>

void bind_synchronize(py::module &m) {

  using synchronize = ::gr::difi::synchronize;

  py::class_<synchronize, gr::sync_block, gr::block, gr::basic_block,
             std::shared_ptr<synchronize>>(m, "synchronize", D(synchronize))

      .def(py::init(&synchronize::make), py::arg("itemsize"),
           py::arg("share_tags"), D(synchronize, make))

      ;
}
